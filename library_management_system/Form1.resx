<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxIQEhUSEBIWFhUXGBUYFhUXFRcWGRUVFRcXFx4YFxUY
        HSggGBolGxcVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhsQEBstJiAlLS0rLy0tLS0tLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS8tLS0tLS0tLS0tLS3/wAARCADnANoDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAMEAgUGBwEI/8QARRAAAgECAwUDCAYIBQQDAAAAAQIAAxEEITEFEkFR
        YQYTIgcyUnGBkaGxQmJywdHwFCNDgqKywuEzkpPS8RVTY3MlNET/xAAaAQEAAwEBAQAAAAAAAAAAAAAA
        AwQFAgEG/8QAMxEAAgECAwUHAwQDAQEAAAAAAAECAxEEITESQVFhgSJxkaGxwfAFE9EUMkLhI2LxUhX/
        2gAMAwEAAhEDEQA/APcYiIAiIgCInM9vO0X/AE/CtUW3eudykD6R1Y9FFz7hxnjaSuz1Jt2R87S9s8Pg
        juG9SrruL9H7baL6tZzK+U6oT/8AXS32jf5Ty84ouxZmLMSSScySeJk1OrMmtia1+y7eHuaNOhTSzVz0
        TF+UXEP/AISIg6gsZpcV2ux7/wD6GA5KFX4gXnPU6ssK95Snia++T9PQtRoUt0US19u4w64uv7Kzj5GQ
        r2gxqaYuv7art/MTPj05XqUp1DEy4vxOJ0FwN9s7yi4+ifG61RydQDboy2++drsXynYWrZcQrUW9Lz0v
        6xmvtFus8kelGGwVSqd2mjMegv7zwl2niZ7nf54lSdGPA/SWGxKVVD02V1OjKQQfaJNPCtiYXaeCbew6
        sOJp3BDetL5z03sl2sTGXpVE7nEIPHSPH6yXzI6cOusv0621k1ZlWVO2azR1EREmIxERAEREAREQBERA
        EREAREQBERAE8Q8su0zUxi0QfDRQf53zN+tt33z2+fmztvie92himP8A3nX/AEz3f9Mgrvs2JqK7VzTK
        1pYp1ZVn0GU3FMtp2NlTqyxSqX0mpSrNls/C4jEMaeFXMefUJsFvwv8AhnK0qFyVVLGyyT/EqInRmAPu
        1mJxFA6Yil7Sw+NptcD5Oqetes7tx3bKL+s3Jlyp5O8Iw8JqKeYa/wAxPP01LmdfdnyOarV8PSG/UqK/
        opTdWLesg+EevOVqOMx+O8GFRqdIfRpeBB9qplvHpf2TcDyauK6frQ1C92Nt1wB9G2hvpf4T0HDYRKSB
        KahVUWAHCSwUaatEjleTuzyTE9kNoUxvbpbj4Kl29xsT7Jb7H7TxVXGYeg2+1QVBuM1+8pWza5OZp7oa
        6nhpyPqbJLfZvD0lxDOUXvGTdD28Vgblb/nSTU57UknvI6kbRbR1sRE0jPEREAREQBERAEREAREQBERA
        EREAT8xdpL/pmKvr+kYi/r715+nZ+bO2+H7vaGKX/wAzt/qeP+qQV9ETUdWaWJ8iVSyWNnYRq1RKa6sb
        Dp1nrux9mphqa0qYyGp4sTqxPMzgvJ5h97EM5+ght62IHy3p6ZTEjm9xJBbyRFkoWfEEzAkZ2LRaZBZ9
        KwLkRWZYBt2tTP1gPfl98ETDQg8iPnCdnc8aurHZRETZMoREQBERAEREAREQBERAEREAREQBPC/LFgO7
        x/eAZVaat62Xwn4bs90nnfln2V3mEXEKM6Lje+xUIX4Nu+8yOqrxJKTtI8cweDes27TW5+XrPCbmt2Px
        SrvAK31VbP3HWbDsKo3WPHfsfUFFvmZ3CSg5O5eUFZM43yb0iGxFxYjuxY6gjfv907+nKVDDIrs6rZn3
        d48929vbmZdSRyzZ1HJWLCzNZGpmYM5OidBPriRq0+lp4eGDSKpJCZHU0h6Hq1Ouom6g9B8pJIMI16an
        6o+UnmytDJeoiInoEREAREQBERAEREAREQBERAEr47CLWpvSqC6urKw5hhYyxEA8C2dhH2fjKuEq63up
        9IDNWHrU/CdrSa4vNr5QeyhxqLXoWGJo5p/5F13G+71nmZzWxcZ3iC4IIuGU6qwNmUjgQbzOrQ2JcjQo
        z249xt0MmUyupkitImSFtTMwZWVpKGnJ6TXi8jDT7vTw9MiZFVbKGeQsb2HM2nj0PTtMELU0+yPlJ5hT
        SwA5AD3TV7a2sKACIN6q2Srra/Eia0pxpxvLRGXCDqStEy2vtlKFlsXqHzUGvrPISgq46tm1RaK8FAu3
        t/5k2ydld2TVrHfrNmWOe70E20oynOpnJtLgsvF8e5ljahTygk3xefgtLd6zNIcFi0zTFBz6LrYH25yf
        A7bO/wBziU7upwP0W9vCbEmU9pYBK6br/usNVPMQnOGcG+5tted2gqkZ5VEu9JJrwsn80NvE5zZW03pP
        +j4k5/s6nBhwuZ0cvUqqqRuvDg+DIKlN03Z9Hua4oRESQjEREAREQBERAEREATiO12DAqtVRQGspa30g
        Ba55kDjyHSdqzAZnITldrYhajlkN1IFjwOWo5iVsV+zqixhf39DQUau8LiWFaa6svcvl5p+HSWUqX0lJ
        O5easW1eZh5WDz6Hnh4Wt+C8r78xNSeHpYLybZNPvK9NeAO8fUufzsPbNc1SXtlY3uVZ1G9VfwU15Dix
        9tsuk9i4ppy0+eugak1aOp0m2dq91ZKY3qreaozt1PSQbJ2X3d6lU71Zs2Y52vwEw2Tgu6vUqnerN5zc
        ugmz74Tp1lUltSfcuH5fPRbudOTUI7FPq+PJcvX0klfEYkLlqeUjxONUeFSC3ymtxWIWmpqPoOHFm5Cd
        SkkrntOi5amwXGcSABpckDP26yxecvQwD4pt6re581BkEEv4eu+GcUcQbqf8Orw9RnnaSUpKyfzPhfd5
        2O5U4SbUHdrVfjjbf5XL20cCldN1/wB1uKnmPwlbZO03pOMPiTn9CpwYcM5siZT2hg0rruv+63FTzH4T
        3tRltx19eT9nu8Ucxaa2J6eafFe63+ZvYnO7K2k9Jxh8Sc/2dTgw5EzopfpVVUV14b0/niV6lN03Z9Hu
        aEREkIxERAEROf7QdqsPg/CxL1TpSTNv3joo9efQzqMXJ2irs8bSzZ0E5bbfbbDYfwUz31TQJTzF+rae
        65nMY2vjtoX75u4on9kurD63P2+6TYPZdOgP1a2PPUn2y5TwsVnN9F+fx4lOrjIxyjmfcKcXtOuq4pu7
        oXuaCXAKjOzHU30z9gE6HblDcfIWBAsOVhaw90g7NkCtnxUibnbmH30uNVz9nGVPqMNqOylks1bzLP06
        s32pb21+PM43FoGFjNYtQ0zY6Ta4ia7ErfWYKdjdXAnSqDpMt+affKGTJjZIpXPGjZd5MTUlL9KkdXFW
        ntjzTUuPVnW7C2UKK77j9YR/lB4DrznJ9lyKtdL6Bh/CL/O09AJkGIhKFRxnqvdJ+/jchnXjKlHYeUs7
        8Vdpel+6x8Jmr2ttMUhur55/h6mXMbW3EZuQM48ksbnMnUypOdskS4TDqb2paLdzG8Sb3N+cvBmqoEvd
        lbeS/HK278BaV6aSzTSRwbjmaFRpnSdncXTqIQMqg89TqP7TY43BpWQpUFwfeDzB5zknpMWFWkbVl0Pp
        jketvfOi2NtZcQvouvnodR1HSb2GxKrLYnr6/wB8V1RiVqH2+3T0Xlw6cH0Zq6NZ8M4oYg3Q/wCFVOlv
        RY/m3qmzbKXMbg0rIUqC4PwPMHgZoqTNh2FCubocqVX+luU4qU3Tf+vpyfs+jO4yVXNfu3rjzXuuqLGN
        wqVl3H9h4qeYkeydpPSYYfEnP9nU4OOAvLLi2RlfFYdaqFH04Hip5icJuMtqOvk+T/O7xR0rOOzLTzT4
        r3W/wZ0MTn9hbQYMcPXPjXzW9NfX7p0E0adRVI7SKVSDhLZYiJzvbPbZwlG1POtVO5SHG/FvZce0iSwi
        5yUVvI27K7NZ2q7TVO8ODwWdX9pU4UhyB9L5euazZOxEo+Jjv1Dm1RszfpfSZbD2aKCZ5u2btxLHrym3
        RZpRiqcdmP8A35wMitXdR8iIpImWXGWQuIRXK1KoUYMNQbzraOIFRQy6H82nJVBJdn7QNE55qdRy6ic1
        Ke2rrUsYat9t2ejM9u4DcO8o8J/hP4Tna877fWouVmU+4znNq7BObUc/qn7jMHE4KSblBdD6TD4qLWzP
        xOUryhVNps8ZRZDZ1KnqCPnNXWma8tTQWZa2FTNbEU6beaSd7hkATr7pZ7UYEUK26nmkAgXufjNz2J2S
        UvXcWLCyAjPd4n25Sp27P65Oi5+8z6T6NR2e1JZu/el7Hzv1urtRcYvJW7v76lHsrjO6qgngV92h+E9L
        3r5jTh1E8bpOysCut8hPQ+z+0/CtOrlfzGOl/RJlH67hXTr/AHVpPyaVvOytzutTv6VWVbD/AG/5Q84v
        PLms7rhmbrFJvqyniCJzJw5UkEZidM0q4qgH9fAz5+SubOHq7F1uZqaaSzTSfVpW1lmmk5SJpzFNJhic
        K1xWondqr/GOR6/OW6aSwiSSLsVnUad0WNi7WXELycecvLqOk1vaDE9+wwtGxJILtwQDrz/44z5idjq7
        b6O1NjqVyvf8+2Wtn7PSgtkGZ1Y6mXZ4uc6ew1rq+K/veRL7VOX3I67lwfvbd56Z2K1HdRRe9gBfnlKh
        MwxO1ULbl8h9LhflMiZ3GcZ5xOoQlFdoobUFno1BrvMh9VgR8zOip7RWwuc7C+R1nObRbeq0qY+jvO3S
        9gPl8ZtaeznIBuMwD75cwmku/wBlcgxX8e73ZvJ5ljMT+mbQqVdadD9XT5Xzufff4TvNv439Hw1ar6KM
        R9q1gPeRPO+zVLcoKTq5Lk8yf7WmvhIZSn0/Jk42doW4m/pmTI0qI0lV5YaMwsM8hczEvI2aeJAwqGVq
        kmdpXcySJyyTCY9qJ8OY4qdD+Bm/we0Eqjwmx4qdR+M5VzK7ORmDY84lTUsySliJU8t3A7h1DZEAjkRe
        QDA0r37tL/ZE53DdoqiZOA456H38ZLU7V2GVLP7WXykLoTb0L0cZTtrb5yOhxWJWkpdzZRqfzrPNtu4/
        9IqtUtYZAA8hzku1dp1K5vUOXBRkB6hNW5lyjR2M3qZ2JxP3OytD7hsR3bbxF/zwnoeyMZRxdFaLAAge
        G2V+o5NzHGeZ1DOm7HbLaod7eIXJieQByt1Mr/UaEJQ233d/IsfS8ROM9iOmvNczqqGJak3c1z/66nAj
        k0tubTPH0VrAqwy4cwed+c1lCu1Ju5rH7FQ8RyY/m0+OxWGdN3Wnpyfs+jz1+rpVFVX+29cea911RbYy
        akt5VqXBsdZ9pYjdPTiJSuSuLayNmiSZFmFBgwuNJMBOylKRkJo9r7T1SmfW33CNr7T1SmfW33CaJmkc
        57kXsLhv5z6IM0v0Me1NPEN4nKmvE9T9X5ymoCgM4uT5iel1P1fnNzsfZbO2/UzY6ngo5DrJ8JRnUl2c
        ufL5ouuSJ8TVhCPaz+fLvpmzPYmz2Ziz5sxu5/pnVyOlSCAKoykk+ghBQiox0MKc3OW1LU47yoV7YMUx
        +0qIvsW7/NVmlw43VC8gB7pc8ptS9TCU/rsx/hH4zXq81sNG1FdfnkY+Pl20i4ryQPKivMg8laKSLW9M
        GeQ78xLzzZFzN2kLtPjPI3ad2PDF2laoZm7SF2naRyyNzK9QyRzK7mSI4InMh3bkAamSOZ0HZrYy1rsx
        tugEm1zmbADkdZxWrKjG7JMPh3Wnsrr3Frs/2cUrv1Ml4HK7HpfQDnOkwmFp0VK075m5J6aDKZLZVVFG
        Siwubn2yzQo28Te6YcpSk9qTuz6KEIwjsxVkZUads29glLaqJVG6Re+ltb9JNisTwGvKaDb22lwqnxfr
        OJGe59VebdeE4cdrs2vfcdqTi7rKxNRrFD3NY2IyRz/K348JlUuDY5GYs3eAUsRkxF6dQ6OOp59ffMA5
        Q9zXIDADde/DgrfjwmFi8K6faWnpyfs+jz118PXVTv3/AJXuuqJaWKZPNNvzynzEbSqMLFsumUr1QVNi
        LSuzShdrIuKlFu9kfWaZKAoDOLk+YnFjzPJfnPoQJYuLsfNp8WP1uQ+c3Gx9ls7b9TNjqeCjkOssYbDS
        qyt48vm5eORxXxEaUb/H83vdosxsbZbO2/UzY6ngo5DrOqo0gg3VGUUaQQbqjKST6GnTjTjsx+f2YVSp
        KpLal8/oRETs4POPKE98dh15Ix+Z+6UFeWO3bf8AyKdKXz3pr1ebNBf4o9xiY5/5S4HmW/Koefd+SbJU
        uWd+fC8r78+F42RclZ5GzyMvMGee2PLmTNIXafGaRO07SPDF2kDZ6TJ2m07N4EVqljpnc8gBc2nNaoqU
        HI7oUnVmoL4jDZ+walbMA243yA9bHKdbs3BihTK3BYkXtoABYAHjqZOXAAVRZRkFH5zMu4XDW8Ta8Bym
        NVrTqvtP8G9SoU6StBfk+4ahbxNrwHKYYvE8BrGKxPAazQbe20uFViW8fEjPcv8ARXm/ykSTbsiZtJXY
        29tlcKpJbx6E+hf6K83Pwnl+Mxr4l95/NF91eX4nrMcfjHxL7zZKPNX88es6fsN2WbF1Azi1FD4z6RH0
        B9/Sa9DDww8PuVNTKlXliKqhT/avn/D1ZMFTxOGpLUXWmhB0KkqMxylSj2XpAWYlr+cTqeVjw4TfAWyE
        ymM1fJmum07o5er2cqrlRrArwSooYfEEfCRf9GxfOmvVFUH/ADWuPZOtiVf0VG97PxZZ/WVbbvBfGc9g
        OzoQ7ztduJ1J9vCb2lTCiyiwkkSzCEYLZirIrynKbvJ3YiInRyIiIB5V27a20s/+0gHru01weemdpez1
        LHU91/C6+ZUGqn7x0nlu0cJXwT91iVP1agzVxzB+7UTXwlaM4qG9GTjcNNy21mWg8+78qLUvmJlvy1Yz
        LlnfnwvK+/PheLHpOXkbPIi8wLz2x4SM8hZ5izyfZ2b++eVJbEHJ7jqnD7k1DjkY08M7aC067s5s96Cs
        zqR4bLfIkseA10mxamlBitJACMt+12PtOnsl/B4Ujx1M24Xzt/eY9bFTqqz0N2hhIUXdZvifcHhd3xNr
        wHL+8+YvE20n3FYm2k0O29rrhlJLfrOJ13L8Bzc/CVyyfNvbZXCqSW8dsz6F/orzf5Ty3G4t8S+82Sjz
        V4/3PWdLguzOM2m/eFDTo8GqXGXNV1Y9dOs9G7Pdi8Ng7Nu95UGjsB4T9RdF9esv0pU8OtqWcuHD2KdW
        lUru17R82cR2T7A1K9qmJBp0siF0dx6vojrrPVsHhUootOmoVVFgBwEniVa9edZ3kWKVKNONooRESElE
        REAREQBERAEREAStjcHTroadVA6nUEX/ACZZiAed7Z8nrKS+BqW4905y/df7j75ymOwuIwxtiKDr9YC6
        +8ZfGe3zFlB1F5cp42pHKWfr4larhKdTNo8JTGKfpTPvRznruO7M4Ovc1MPTJOpA3GP7yWM1FfydYFvN
        FRPs1Cf57y1HH03qminL6Zwkecl5gXnoL+TXDcK1Ye1T/TPi+TTDcatY+1R/TJP11Hn4Ef8A8yf/AK8v
        7PO2qTZdnRv1QOqj3sBO6peTrBDXvW+1Ut/KBMMTsHDYSvh1w9Lc3ixY7zsSFsdWJ5yGvjac6bjG+ZNQ
        wDpzU29Da0sIA7VGzJYkdBf5zHFYm2kYrE20mqxmKZW3EzrH3Ux/u+UzDSPmLxRVtynnVPHhTH+75S5s
        fs+hIeooa30iLknpfT1yXYWxgBvNnfU8WP4TowLZCeHp9AtpPsRAEREAREQBERAEREAREQBERAEREARE
        QBERAEREATT9oNmtWVXpkipTuV63tcfCbiIBwY2kxFkU98SRmMqdtT6/lNvsLY1hvNx85uLH8JvDg6ZL
        HcW7ecbZm3WTgWyEAAWyEyiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIA
        iIgCIiAIiIAiIgCIiAIiIB//2Q==
</value>
  </data>
</root>